#!/usr/bin/env python3

import subprocess
import sys
import webbrowser

def main():
    # Check if the current directory is a git directory
    try:
        subprocess.check_output(['git', 'rev-parse', '--is-inside-work-tree'])
    except subprocess.CalledProcessError:
        sys.stderr.write('Current directory is not a git directory\n')
        sys.exit(1)

    # Get the name of the main branch
    try:
        output = subprocess.check_output(['git', 'symbolic-ref', 'refs/remotes/origin/HEAD']).decode('utf-8')
        main_branch = output.strip().split('/')[-1]
    except (subprocess.CalledProcessError, AttributeError) as e:
        sys.stderr.write(str(e) + '\n')
        sys.exit(1)

    # Get the name of the current branch
    try:
        current_branch = subprocess.check_output(['git', 'branch', '--show-current']).strip().decode('utf-8')
    except subprocess.CalledProcessError:
        sys.stderr.write('Could not get the current branch name\n')
        sys.exit(1)

    # Get the remote URL
    try:
        remote_url = subprocess.check_output(['git', 'config', '--get', 'remote.origin.url']).strip().decode('utf-8')
    except subprocess.CalledProcessError:
        sys.stderr.write('Could not get the remote URL\n')
        sys.exit(1)
    
    # Convert the remote URL to a browser-compatible URL
    if 'git@' in remote_url:
        remote_url = remote_url.replace(':', '/').replace('git@', 'https://').replace('.git', '')
    
    # Append the string /compare/main...otherbranch to the URL
    compare_url = f'{remote_url}/compare/{main_branch}...{current_branch}'
    
    # Open the URL in the browser
    webbrowser.open(compare_url)

if __name__ == "__main__":
    main()
